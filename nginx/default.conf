#The upstream block defines a group of servers. 
#In our webapp, there's only one server named backend on port 4001. 
#This grouping can be used to load balance traffic between multiple servers, 
#but here it just simplifies referencing the backend server later in the configuration.

upstream frontend {
    server frontend:3000;
}

upstream api {
    server backend:4001;
}
server {
    listen      80;
    server_name DOMAIN_NAME;
    return      301 https://$server_name:8081$request_uri;
}

server {
    #====== HTTPS SERVER ========#

	#This block defines the server configuration for HTTPS traffic.
	# listen 443 ssl http2: Listens on the default port for HTTPS (443) 
	#and is set up to use SSL/TLS and HTTP/2. SSL certificate and private key are specified.
		listen 443 ssl;
        http2 on;

		ssl_certificate      cert.crt;
		ssl_certificate_key  cert.key;
		
		ssl_protocols TLSv1.2 TLSv1.3;

		server_name DOMAIN_NAME;

    #====== API ENDPOINT CONFIGURATION ========#

	# Requests starting with /api are forwarded to the previously defined upstream group named api.
	# The rewrite directive strips off the /api prefix before sending to the backend.
	location /api/ {
        rewrite ^/api/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://api/;
	}

	location /studio {
		return 301 http://localhost:5555;
	}

	location / {
        proxy_http_version 1.1;  
        proxy_set_header Upgrade $http_upgrade;  
        proxy_set_header Connection 'upgrade';  
        proxy_set_header Host $host;  
        proxy_cache_bypass $http_upgrade;

        proxy_pass http://frontend/;
	}

	location ~* \.io {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;

        proxy_pass http://backend;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	}

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
stages:
  - .pre
  - build
  - test

variables:
  APP_VERSION: $CI_PIPELINE_IID

linter-backend:
  stage: .pre
  image: node:16-alpine
  script:
    - echo "Running the linter"
    - cd server
    - npm install @typescript-eslint/eslint-plugin@latest --save-dev --force
    - npm install --legacy-peer-deps
    - npm run lint
    - echo "Linter finished"

unit-test-backend:
  stage: .pre
  image: node:16-alpine
  script:
    - echo "Running unit-tests for back-end"
    - cd server
    - npm install --legacy-peer-deps
    - npm run test:unit
    - echo "unit-tests finished for back-end"

build-frontend:
  stage: build
  image: node:16-alpine
  script:
    - echo "Start building the app - Front End"
    - cd client
    - npm install --legacy-peer-deps
    - npm run build
    - echo $APP_VERSION > build/version.html
    - echo "Front end built successfully!"
  artifacts:
    paths:
      - build
      - node_modules/

build-backend:
  stage: build
  image: node:16-alpine
  script:
    - echo "Start building the app - Back end"
    - cd server
    - npm install --legacy-peer-deps
    - npm run build
    - echo $APP_VERSION > build/version.html
    - echo "Back end built successfully!"
  artifacts:
    paths:
      - build
      - node_modules/
